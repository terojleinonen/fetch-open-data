/* BookCarousel.module.css */

.carouselContainer {
    width: 100%;
    max-width: 1000px; /* Adjusted from 1200px to better fit typical book covers */
    height: 500px; /* Adjusted height */
    position: relative;
    perspective: 1000px;
    margin: 40px auto 0; /* Adjusted margin-top */
    padding-bottom: 60px; /* Space for title/author below */
}

.carouselTrack {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.card {
    position: absolute;
    width: 220px; /* Adjusted width for book covers */
    height: 330px; /* Adjusted height for book covers (approx 1.5 ratio) */
    background: var(--background-start-rgb);
    border-radius: 10px; /* Slightly smaller border radius */
    overflow: hidden;
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    cursor: pointer;
    display: flex; /* For centering content if needed, or for overlay */
    flex-direction: column;
    justify-content: center; /* Center image if it's smaller */
    align-items: center;
    border: 1px solid rgba(var(--foreground-rgb-raw), 0.1);
}

.cardImage { /* Was .card img in codepen */
    width: 100%;
    height: 100%;
    object-fit: cover; /* Cover ensures the image fills the card, might crop */
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.cardLink {
    display: block;
    width: 100%;
    height: 100%;
    text-decoration: none;
    color: inherit;
}


/* Positional and visual styles for cards */
.center {
    z-index: 10;
    transform: scale(1.1) translateZ(0); /* Center card is slightly larger */
}

.center .cardImage {
    filter: none;
}

.left2 {
    z-index: 1;
    transform: translateX(-360px) scale(0.75) translateZ(-300px) rotateY(35deg); /* Added rotateY */
    opacity: 0.5; /* Adjusted opacity */
}

.left2 .cardImage {
    filter: grayscale(80%) brightness(0.7); /* Made it less gray */
}

.left1 {
    z-index: 5;
    transform: translateX(-180px) scale(0.9) translateZ(-100px) rotateY(25deg); /* Added rotateY */
    opacity: 0.8;
}

.left1 .cardImage {
    filter: grayscale(50%) brightness(0.9); /* Made it less gray */
}

.right1 {
    z-index: 5;
    transform: translateX(180px) scale(0.9) translateZ(-100px) rotateY(-25deg); /* Added rotateY */
    opacity: 0.8;
}

.right1 .cardImage {
    filter: grayscale(50%) brightness(0.9);
}

.right2 {
    z-index: 1;
    transform: translateX(360px) scale(0.75) translateZ(-300px) rotateY(-35deg); /* Added rotateY */
    opacity: 0.5;
}

.right2 .cardImage {
    filter: grayscale(80%) brightness(0.7);
}

.hidden {
    opacity: 0;
    pointer-events: none;
    z-index: 0;
    transform: scale(0.5) translateZ(-500px); /* Ensure hidden cards are far back */
}

/* Info display below carousel */
.bookInfo {
    text-align: center;
    margin-top: 25px; /* Adjusted from 40px */
    transition: all 0.5s ease-out;
    height: 60px; /* Fixed height to prevent layout shifts */
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.bookTitle {
    color: var(--foreground-rgb);
    font-size: 1.75rem; /* Adjusted from 2.5rem */
    font-weight: 600; /* Adjusted from 700 */
    margin-bottom: 5px; /* Adjusted from 10px */
    position: relative;
    display: inline-block;
    opacity: 0; /* Will be faded in by JS */
}

.bookAuthor { /* New style for author, similar to member-role */
    color: var(--muted-foreground-rgb); /* Assuming a CSS variable like this exists or use a fixed color */
    font-size: 1rem; /* Adjusted from 1.5rem */
    font-weight: 400;
    opacity: 0; /* Will be faded in by JS */
    text-transform: uppercase;
    letter-spacing: 0.05em; /* Adjusted from 0.1em */
}


/* Dots navigation */
.dotsContainer { /* Was .dots in codepen */
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 20px; /* Adjusted from 60px */
}

.dot {
    width: 10px; /* Adjusted from 12px */
    height: 10px; /* Adjusted from 12px */
    border-radius: 50%;
    background: rgba(var(--foreground-rgb-raw), 0.2); /* Use theme variable */
    cursor: pointer;
    transition: all 0.3s ease;
}

.dotActive { /* Was .dot.active */
    background: var(--accent-color); /* Use theme accent color */
    transform: scale(1.2);
}

/* Arrow navigation */
.navArrow { /* Was .nav-arrow */
    position: absolute;
    top: calc(50% - 30px); /* Adjust to be middle of cards, not container */
    transform: translateY(-50%);
    background: rgba(var(--card-rgb-raw), 0.7); /* Use theme variable */
    color: var(--foreground-rgb);
    width: 35px; /* Adjusted from 40px */
    height: 35px; /* Adjusted from 40px */
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 20;
    transition: all 0.3s ease;
    font-size: 1.25rem; /* Adjusted from 1.5rem */
    border: 1px solid rgba(var(--foreground-rgb-raw), 0.1);
    outline: none;
    padding-bottom: 2px; /* Fine-tune icon position */
}

.navArrow:hover {
    background: rgba(var(--foreground-rgb-raw), 0.2);
    transform: translateY(-50%) scale(1.1);
}

.leftArrow { /* Was .nav-arrow.left */
    left: 10px; /* Adjusted from 20px */
    padding-right: 2px;
}

.rightArrow { /* Was .nav-arrow.right */
    right: 10px; /* Adjusted from 20px */
    padding-left: 2px;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .carouselContainer {
        height: 400px; /* Smaller height on mobile */
        margin-top: 20px;
    }

    .card {
        width: 160px; /* Smaller cards on mobile */
        height: 240px;
    }

    .left2 {
        transform: translateX(-220px) scale(0.7) translateZ(-250px) rotateY(35deg);
    }

    .left1 {
        transform: translateX(-110px) scale(0.85) translateZ(-80px) rotateY(25deg);
    }

    .right1 {
        transform: translateX(110px) scale(0.85) translateZ(-80px) rotateY(-25deg);
    }

    .right2 {
        transform: translateX(220px) scale(0.7) translateZ(-250px) rotateY(-35deg);
    }

    .center {
        transform: scale(1.0) translateZ(0); /* Center card not as scaled up on mobile */
    }

    .bookTitle {
        font-size: 1.25rem;
    }

    .bookAuthor {
        font-size: 0.8rem;
    }

    .navArrow {
        width: 30px;
        height: 30px;
        font-size: 1rem;
    }
    .leftArrow { left: 5px; }
    .rightArrow { right: 5px; }

    .dotsContainer { margin-top: 15px; }
    .dot { width: 8px; height: 8px; }
}

@media (max-width: 480px) {
    .carouselContainer {
        height: 320px;
    }
    .card {
        width: 120px;
        height: 180px;
    }
    /* Hide side cards on very small screens if they cause overflow or look too cluttered */
    .left2, .right2 {
        opacity: 0;
        pointer-events: none; /* Effectively hidden */
         transform: translateX(-150px) scale(0.6) translateZ(-200px) rotateY(40deg);
    }
    .left1 {
        transform: translateX(-90px) scale(0.75) translateZ(-60px) rotateY(30deg);
         opacity: 0.7;
    }
    .right1 {
        transform: translateX(90px) scale(0.75) translateZ(-60px) rotateY(-30deg);
        opacity: 0.7;
    }
     .center {
        transform: scale(0.9) translateZ(0);
    }

    .bookInfo {
        margin-top: 15px;
        height: 50px;
    }
    .bookTitle { font-size: 1rem; }
    .bookAuthor { font-size: 0.7rem; }
}

/* Loading and error states for the carousel itself */
.carouselStatus {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 300px; /* Or match .carouselContainer height */
    font-size: 1.2rem;
    color: var(--muted-foreground-rgb);
}

.errorStatus {
    color: var(--accent-color); /* Or your error color variable */
}

:global(.dark) .card {
  background: var(--background-end-rgb);
  border: 1px solid rgba(var(--foreground-rgb-raw), 0.2);
}
:global(.dark) .navArrow {
    background: rgba(var(--background-start-rgb-raw), 0.7);
    color: var(--foreground-rgb);
    border: 1px solid rgba(var(--foreground-rgb-raw), 0.3);
}
:global(.dark) .navArrow:hover {
    background: rgba(var(--foreground-rgb-raw), 0.3);
}
:global(.dark) .dot {
    background: rgba(var(--foreground-rgb-raw), 0.3);
}
:global(.dark) .dotActive {
    background: var(--accent-color);
}

/* Ensure these variables are defined in globals.css or similar */
/* Example variables (make sure they exist in your project):
:root {
  --background-start-rgb: 255, 255, 255;
  --background-end-rgb: 240, 240, 240;
  --foreground-rgb: 0, 0, 0;
  --foreground-rgb-raw: 0,0,0;
  --card-rgb-raw: 255,255,255;
  --muted-foreground-rgb: 100, 100, 100;
  --accent-color: 0, 123, 255;
}
.dark {
  --background-start-rgb: 10, 10, 10;
  --background-end-rgb: 0,0,0;
  --foreground-rgb: 255,255,255;
  --foreground-rgb-raw: 255,255,255;
  --card-rgb-raw: 20,20,20;
  --muted-foreground-rgb: 150,150,150;
}
*/
